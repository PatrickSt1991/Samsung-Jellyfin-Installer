<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DownloadAndInstall" xml:space="preserve">
    <value>Download &amp; Install</value>
  </data>
  <data name="InstallationFailed" xml:space="preserve">
    <value>Installation failed</value>
  </data>
  <data name="InstallationSuccessfulOn" xml:space="preserve">
    <value>Successfully installed on</value>
  </data>
  <data name="DownloadFailed" xml:space="preserve">
    <value>Download failed:</value>
  </data>
  <data name="FailedLoadingReleases" xml:space="preserve">
    <value>Failed to load releases:</value>
  </data>
  <data name="PleaseInstallTizen" xml:space="preserve">
    <value>Tizen CLI is required but not found. Please install Tizen Studio first.</value>
  </data>
  <data name="DownloadingPackage" xml:space="preserve">
    <value>Downloading package...</value>
  </data>
  <data name="ConnectingToDevice" xml:space="preserve">
    <value>Connecting to device...</value>
  </data>
  <data name="RetrievingDeviceAddress" xml:space="preserve">
    <value>Retrieving device address...</value>
  </data>
  <data name="TvNameNotFound" xml:space="preserve">
    <value>TV Name could not be found...</value>
  </data>
  <data name="UpdatingCertificateProfile" xml:space="preserve">
    <value>Updating certificate profile...</value>
  </data>
  <data name="PackagingWgtWithCertificate" xml:space="preserve">
    <value>Packaging the wgt file with certificate...</value>
  </data>
  <data name="InstallationSuccessful" xml:space="preserve">
    <value>Installation successful</value>
  </data>
  <data name="InstallingPackage" xml:space="preserve">
    <value>Installing package on device...</value>
  </data>
  <data name="InstallationMaybeFailed" xml:space="preserve">
    <value>Installation may have failed</value>
  </data>
  <data name="Output" xml:space="preserve">
    <value>Output</value>
  </data>
  <data name="LoadingReleases" xml:space="preserve">
    <value>Loading releases...</value>
  </data>
  <data name="ScanningNetwork" xml:space="preserve">
    <value>Scanning network for Samsung TV...</value>
  </data>
  <data name="CheckTizenOS" xml:space="preserve">
    <value>Checking Tizen OS version...</value>
  </data>
  <data name="SuccessAuthCode" xml:space="preserve">
    <value>Successfully obtained authorization code</value>
  </data>
  <data name="Ready" xml:space="preserve">
    <value>Ready for use...</value>
  </data>
  <data name="FailedAuthCode" xml:space="preserve">
    <value>Login was canceled or failed...</value>
  </data>
  <data name="NoDevicesFound" xml:space="preserve">
    <value>No devices found</value>
  </data>
  <data name="OutputDir" xml:space="preserve">
    <value>Ensuring that the output directory exists</value>
  </data>
  <data name="GenPassword" xml:space="preserve">
    <value>Generating random password...</value>
  </data>
  <data name="GenKeyPair" xml:space="preserve">
    <value>Generating keypair</value>
  </data>
  <data name="CreateAuthorCsr" xml:space="preserve">
    <value>Creating Author CSR...</value>
  </data>
  <data name="CreateDistributorCSR" xml:space="preserve">
    <value>Generating Distributor CSR with DUID...</value>
  </data>
  <data name="PostAuthorCSR" xml:space="preserve">
    <value>Posting to Samsung endpoint...</value>
  </data>
  <data name="PostFirstDistributorCSR" xml:space="preserve">
    <value>Posting to first Samsung distributor...</value>
  </data>
  <data name="PostSecondDistributorCSR" xml:space="preserve">
    <value>Posting to second Samsung distributor...</value>
  </data>
  <data name="CreateNewCertificates" xml:space="preserve">
    <value>Creating the signed P12 files...</value>
  </data>
  <data name="MovingP12Files" xml:space="preserve">
    <value>Copy files to be used in certificate-manager...</value>
  </data>
  <data name="SettingCertificateManager" xml:space="preserve">
    <value>Fixing Tizen certificate manager...</value>
  </data>
  <data name="SettingsCaCerts" xml:space="preserve">
    <value>Setting CA certificates...</value>
  </data>
  <data name="ChooseRelease" xml:space="preserve">
    <value>Choose release...</value>
  </data>
  <data name="ChooseVersion" xml:space="preserve">
    <value>Choose version...</value>
  </data>
  <data name="ChooseTV" xml:space="preserve">
    <value>Choose TV...</value>
  </data>
  <data name="SelectLanguage" xml:space="preserve">
    <value>Select language</value>
  </data>
  <data name="SelectCertificate" xml:space="preserve">
    <value>Select certificate</value>
  </data>
  <data name="SelectWGT" xml:space="preserve">
    <value>Select WGT file</value>
  </data>
  <data name="lbl_Release" xml:space="preserve">
    <value>Release</value>
  </data>
  <data name="lbl_Version" xml:space="preserve">
    <value>Version</value>
  </data>
  <data name="lbl_SelectTv" xml:space="preserve">
    <value>Select TV</value>
  </data>
  <data name="lbl_Language" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="lbl_Certifcate" xml:space="preserve">
    <value>Certificate</value>
  </data>
  <data name="lbl_CustomWgt" xml:space="preserve">
    <value>Custom WGT</value>
  </data>
  <data name="lbl_Settings" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="lbl_RememberIp" xml:space="preserve">
    <value>Remember IPs</value>
  </data>
</root>